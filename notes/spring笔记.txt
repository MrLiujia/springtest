SSM（重点）
Spring + Spring MVC + Mybatis

SSH(用得越来越少)
Sprint + Struts     + Hibernate

Spring
官网 				https://spring.io/projects/spring-framework
github			https://github.com/spring-projects/spring-framework

1. IOC
Inversion of Control				控制反转
Dependency Injection				依赖注入（简称DI）
Single Responsibility Principle		单一职责原则(SRP) 利于复用、维护、扩展

依赖的两种注入方式：构造器注入、setter注入
另一个角度分类：手动注入，spring IOC容器注入（xml、注解、混合xml和注解）

Spring IOC注解：

@Controller  控制器组件
@Service     服务组件
@Repository  DAO组件
@Component   声明组件           用在实现类上面，当组件不是控制器、service、DAO时使用
@Autowired   声明依赖关系       用在构造器或者setter、字段上面
@Primary     作为首选组件       用在有多个组件实现了同一接口时

@Configuration    声明配置类
@ComponentScan    配置组件扫描的顶层包
@Bean             手动定义组件

spring IOC 术语：
组件（component）、beans：特指系统中的关键的、起支撑作用的对象（骨架对象）

scope(域)：singleton(单例)、prototype(原型)
  建议：如果你不确定用哪个，就用默认的


参考：
OOP设计思想       https://blog.csdn.net/Shenpibaipao/article/details/77162732
设计模式          经典书籍《设计模式：可复用面向对象软件的基础》
Spring JDBC       参考博客 https://www.cnblogs.com/tuhooo/p/6491913.html

2. AOP
Aspect oriented programming（面向切面编程）
它和OOP（面向对象编程）不是对抗的关系，而是补充

注解：
@Aspect                            声明切面
@EnableAspectJAutoProxy            启用@Aspect组件的处理
@Around                            拦截方法，可以决定要不要放行

